Terminals unused in grammar

   TOK_ERROR


Grammar

    0 $accept: prog $end

    1 prog: TOK_PROGRAM prog_name TOK_VAR dec_list TOK_BEGIN stmt_list TOK_END TOK_POINT

    2 prog_name: TOK_ID

    3 dec_list: dec
    4         | dec_list ';' dec

    5 dec: id_list ':' type

    6 type: TOK_INTEGER

    7 id_list: TOK_ID
    8        | id_list ',' TOK_ID

    9 stmt_list: stmt
   10          | stmt_list ';' stmt

   11 stmt: assign
   12     | read
   13     | write
   14     | for

   15 assign: TOK_ID TOK_ASSIGMENT exp

   16 exp: term
   17    | exp TOK_PLUS term
   18    | exp TOK_MINUS term

   19 term: factor
   20     | term TOK_MULTIPLY factor
   21     | term TOK_DIVIDE factor

   22 factor: TOK_ID
   23       | TOK_INT
   24       | TOK_LEFT exp TOK_RIGHT

   25 read: TOK_READ TOK_LEFT id_list TOK_RIGHT

   26 for: TOK_FOR index_exp TOK_DO body

   27 write: TOK_WRITE TOK_LEFT id_list TOK_RIGHT

   28 index_exp: TOK_ID TOK_ASSIGMENT exp TOK_TO exp

   29 body: stmt
   30     | TOK_BEGIN stmt_list TOK_END


Terminals, with rules where they appear

$end (0) 0
',' (44) 8
':' (58) 5
';' (59) 4 10
error (256)
TOK_PROGRAM (258) 1
TOK_BEGIN (259) 1 30
TOK_END (260) 1 30
TOK_VAR (261) 1
TOK_POINT (262) 1
TOK_PLUS (263) 17
TOK_MINUS (264) 18
TOK_MULTIPLY (265) 20
TOK_DIVIDE (266) 21
TOK_LEFT (267) 24 25 27
TOK_RIGHT (268) 24 25 27
TOK_ASSIGMENT (269) 15 28
TOK_INTEGER (270) 6
TOK_READ (271) 25
TOK_WRITE (272) 27
TOK_FOR (273) 26
TOK_TO (274) 28
TOK_DO (275) 26
TOK_ERROR <sir> (276)
TOK_ID <sir> (277) 2 7 8 15 22 28
TOK_INT <val> (278) 23


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
prog (28)
    on left: 1, on right: 0
prog_name (29)
    on left: 2, on right: 1
dec_list (30)
    on left: 3 4, on right: 1 4
dec (31)
    on left: 5, on right: 3 4
type (32)
    on left: 6, on right: 5
id_list <sir> (33)
    on left: 7 8, on right: 5 8 25 27
stmt_list (34)
    on left: 9 10, on right: 1 10 30
stmt (35)
    on left: 11 12 13 14, on right: 9 10 29
assign (36)
    on left: 15, on right: 11
exp (37)
    on left: 16 17 18, on right: 15 17 18 24 28
term (38)
    on left: 19 20 21, on right: 16 17 18 20 21
factor (39)
    on left: 22 23 24, on right: 19 20 21
read (40)
    on left: 25, on right: 12
for (41)
    on left: 26, on right: 14
write (42)
    on left: 27, on right: 13
index_exp (43)
    on left: 28, on right: 26
body (44)
    on left: 29 30, on right: 26


State 0

    0 $accept: . prog $end

    TOK_PROGRAM  shift, and go to state 1

    prog  go to state 2


State 1

    1 prog: TOK_PROGRAM . prog_name TOK_VAR dec_list TOK_BEGIN stmt_list TOK_END TOK_POINT

    TOK_ID  shift, and go to state 3

    prog_name  go to state 4


State 2

    0 $accept: prog . $end

    $end  shift, and go to state 5


State 3

    2 prog_name: TOK_ID .

    $default  reduce using rule 2 (prog_name)


State 4

    1 prog: TOK_PROGRAM prog_name . TOK_VAR dec_list TOK_BEGIN stmt_list TOK_END TOK_POINT

    TOK_VAR  shift, and go to state 6


State 5

    0 $accept: prog $end .

    $default  accept


State 6

    1 prog: TOK_PROGRAM prog_name TOK_VAR . dec_list TOK_BEGIN stmt_list TOK_END TOK_POINT

    TOK_ID  shift, and go to state 7

    dec_list  go to state 8
    dec       go to state 9
    id_list   go to state 10


State 7

    7 id_list: TOK_ID .

    $default  reduce using rule 7 (id_list)


State 8

    1 prog: TOK_PROGRAM prog_name TOK_VAR dec_list . TOK_BEGIN stmt_list TOK_END TOK_POINT
    4 dec_list: dec_list . ';' dec

    TOK_BEGIN  shift, and go to state 11
    ';'        shift, and go to state 12


State 9

    3 dec_list: dec .

    $default  reduce using rule 3 (dec_list)


State 10

    5 dec: id_list . ':' type
    8 id_list: id_list . ',' TOK_ID

    ':'  shift, and go to state 13
    ','  shift, and go to state 14


State 11

    1 prog: TOK_PROGRAM prog_name TOK_VAR dec_list TOK_BEGIN . stmt_list TOK_END TOK_POINT

    TOK_READ   shift, and go to state 15
    TOK_WRITE  shift, and go to state 16
    TOK_FOR    shift, and go to state 17
    TOK_ID     shift, and go to state 18

    stmt_list  go to state 19
    stmt       go to state 20
    assign     go to state 21
    read       go to state 22
    for        go to state 23
    write      go to state 24


State 12

    4 dec_list: dec_list ';' . dec

    TOK_ID  shift, and go to state 7

    dec      go to state 25
    id_list  go to state 10


State 13

    5 dec: id_list ':' . type

    TOK_INTEGER  shift, and go to state 26

    type  go to state 27


State 14

    8 id_list: id_list ',' . TOK_ID

    TOK_ID  shift, and go to state 28


State 15

   25 read: TOK_READ . TOK_LEFT id_list TOK_RIGHT

    TOK_LEFT  shift, and go to state 29


State 16

   27 write: TOK_WRITE . TOK_LEFT id_list TOK_RIGHT

    TOK_LEFT  shift, and go to state 30


State 17

   26 for: TOK_FOR . index_exp TOK_DO body

    TOK_ID  shift, and go to state 31

    index_exp  go to state 32


State 18

   15 assign: TOK_ID . TOK_ASSIGMENT exp

    TOK_ASSIGMENT  shift, and go to state 33


State 19

    1 prog: TOK_PROGRAM prog_name TOK_VAR dec_list TOK_BEGIN stmt_list . TOK_END TOK_POINT
   10 stmt_list: stmt_list . ';' stmt

    TOK_END  shift, and go to state 34
    ';'      shift, and go to state 35


State 20

    9 stmt_list: stmt .

    $default  reduce using rule 9 (stmt_list)


State 21

   11 stmt: assign .

    $default  reduce using rule 11 (stmt)


State 22

   12 stmt: read .

    $default  reduce using rule 12 (stmt)


State 23

   14 stmt: for .

    $default  reduce using rule 14 (stmt)


State 24

   13 stmt: write .

    $default  reduce using rule 13 (stmt)


State 25

    4 dec_list: dec_list ';' dec .

    $default  reduce using rule 4 (dec_list)


State 26

    6 type: TOK_INTEGER .

    $default  reduce using rule 6 (type)


State 27

    5 dec: id_list ':' type .

    $default  reduce using rule 5 (dec)


State 28

    8 id_list: id_list ',' TOK_ID .

    $default  reduce using rule 8 (id_list)


State 29

   25 read: TOK_READ TOK_LEFT . id_list TOK_RIGHT

    TOK_ID  shift, and go to state 7

    id_list  go to state 36


State 30

   27 write: TOK_WRITE TOK_LEFT . id_list TOK_RIGHT

    TOK_ID  shift, and go to state 7

    id_list  go to state 37


State 31

   28 index_exp: TOK_ID . TOK_ASSIGMENT exp TOK_TO exp

    TOK_ASSIGMENT  shift, and go to state 38


State 32

   26 for: TOK_FOR index_exp . TOK_DO body

    TOK_DO  shift, and go to state 39


State 33

   15 assign: TOK_ID TOK_ASSIGMENT . exp

    TOK_LEFT  shift, and go to state 40
    TOK_ID    shift, and go to state 41
    TOK_INT   shift, and go to state 42

    exp     go to state 43
    term    go to state 44
    factor  go to state 45


State 34

    1 prog: TOK_PROGRAM prog_name TOK_VAR dec_list TOK_BEGIN stmt_list TOK_END . TOK_POINT

    TOK_POINT  shift, and go to state 46


State 35

   10 stmt_list: stmt_list ';' . stmt

    TOK_READ   shift, and go to state 15
    TOK_WRITE  shift, and go to state 16
    TOK_FOR    shift, and go to state 17
    TOK_ID     shift, and go to state 18

    stmt    go to state 47
    assign  go to state 21
    read    go to state 22
    for     go to state 23
    write   go to state 24


State 36

    8 id_list: id_list . ',' TOK_ID
   25 read: TOK_READ TOK_LEFT id_list . TOK_RIGHT

    TOK_RIGHT  shift, and go to state 48
    ','        shift, and go to state 14


State 37

    8 id_list: id_list . ',' TOK_ID
   27 write: TOK_WRITE TOK_LEFT id_list . TOK_RIGHT

    TOK_RIGHT  shift, and go to state 49
    ','        shift, and go to state 14


State 38

   28 index_exp: TOK_ID TOK_ASSIGMENT . exp TOK_TO exp

    TOK_LEFT  shift, and go to state 40
    TOK_ID    shift, and go to state 41
    TOK_INT   shift, and go to state 42

    exp     go to state 50
    term    go to state 44
    factor  go to state 45


State 39

   26 for: TOK_FOR index_exp TOK_DO . body

    TOK_BEGIN  shift, and go to state 51
    TOK_READ   shift, and go to state 15
    TOK_WRITE  shift, and go to state 16
    TOK_FOR    shift, and go to state 17
    TOK_ID     shift, and go to state 18

    stmt    go to state 52
    assign  go to state 21
    read    go to state 22
    for     go to state 23
    write   go to state 24
    body    go to state 53


State 40

   24 factor: TOK_LEFT . exp TOK_RIGHT

    TOK_LEFT  shift, and go to state 40
    TOK_ID    shift, and go to state 41
    TOK_INT   shift, and go to state 42

    exp     go to state 54
    term    go to state 44
    factor  go to state 45


State 41

   22 factor: TOK_ID .

    $default  reduce using rule 22 (factor)


State 42

   23 factor: TOK_INT .

    $default  reduce using rule 23 (factor)


State 43

   15 assign: TOK_ID TOK_ASSIGMENT exp .
   17 exp: exp . TOK_PLUS term
   18    | exp . TOK_MINUS term

    TOK_PLUS   shift, and go to state 55
    TOK_MINUS  shift, and go to state 56

    $default  reduce using rule 15 (assign)


State 44

   16 exp: term .
   20 term: term . TOK_MULTIPLY factor
   21     | term . TOK_DIVIDE factor

    TOK_MULTIPLY  shift, and go to state 57
    TOK_DIVIDE    shift, and go to state 58

    $default  reduce using rule 16 (exp)


State 45

   19 term: factor .

    $default  reduce using rule 19 (term)


State 46

    1 prog: TOK_PROGRAM prog_name TOK_VAR dec_list TOK_BEGIN stmt_list TOK_END TOK_POINT .

    $default  reduce using rule 1 (prog)


State 47

   10 stmt_list: stmt_list ';' stmt .

    $default  reduce using rule 10 (stmt_list)


State 48

   25 read: TOK_READ TOK_LEFT id_list TOK_RIGHT .

    $default  reduce using rule 25 (read)


State 49

   27 write: TOK_WRITE TOK_LEFT id_list TOK_RIGHT .

    $default  reduce using rule 27 (write)


State 50

   17 exp: exp . TOK_PLUS term
   18    | exp . TOK_MINUS term
   28 index_exp: TOK_ID TOK_ASSIGMENT exp . TOK_TO exp

    TOK_PLUS   shift, and go to state 55
    TOK_MINUS  shift, and go to state 56
    TOK_TO     shift, and go to state 59


State 51

   30 body: TOK_BEGIN . stmt_list TOK_END

    TOK_READ   shift, and go to state 15
    TOK_WRITE  shift, and go to state 16
    TOK_FOR    shift, and go to state 17
    TOK_ID     shift, and go to state 18

    stmt_list  go to state 60
    stmt       go to state 20
    assign     go to state 21
    read       go to state 22
    for        go to state 23
    write      go to state 24


State 52

   29 body: stmt .

    $default  reduce using rule 29 (body)


State 53

   26 for: TOK_FOR index_exp TOK_DO body .

    $default  reduce using rule 26 (for)


State 54

   17 exp: exp . TOK_PLUS term
   18    | exp . TOK_MINUS term
   24 factor: TOK_LEFT exp . TOK_RIGHT

    TOK_PLUS   shift, and go to state 55
    TOK_MINUS  shift, and go to state 56
    TOK_RIGHT  shift, and go to state 61


State 55

   17 exp: exp TOK_PLUS . term

    TOK_LEFT  shift, and go to state 40
    TOK_ID    shift, and go to state 41
    TOK_INT   shift, and go to state 42

    term    go to state 62
    factor  go to state 45


State 56

   18 exp: exp TOK_MINUS . term

    TOK_LEFT  shift, and go to state 40
    TOK_ID    shift, and go to state 41
    TOK_INT   shift, and go to state 42

    term    go to state 63
    factor  go to state 45


State 57

   20 term: term TOK_MULTIPLY . factor

    TOK_LEFT  shift, and go to state 40
    TOK_ID    shift, and go to state 41
    TOK_INT   shift, and go to state 42

    factor  go to state 64


State 58

   21 term: term TOK_DIVIDE . factor

    TOK_LEFT  shift, and go to state 40
    TOK_ID    shift, and go to state 41
    TOK_INT   shift, and go to state 42

    factor  go to state 65


State 59

   28 index_exp: TOK_ID TOK_ASSIGMENT exp TOK_TO . exp

    TOK_LEFT  shift, and go to state 40
    TOK_ID    shift, and go to state 41
    TOK_INT   shift, and go to state 42

    exp     go to state 66
    term    go to state 44
    factor  go to state 45


State 60

   10 stmt_list: stmt_list . ';' stmt
   30 body: TOK_BEGIN stmt_list . TOK_END

    TOK_END  shift, and go to state 67
    ';'      shift, and go to state 35


State 61

   24 factor: TOK_LEFT exp TOK_RIGHT .

    $default  reduce using rule 24 (factor)


State 62

   17 exp: exp TOK_PLUS term .
   20 term: term . TOK_MULTIPLY factor
   21     | term . TOK_DIVIDE factor

    TOK_MULTIPLY  shift, and go to state 57
    TOK_DIVIDE    shift, and go to state 58

    $default  reduce using rule 17 (exp)


State 63

   18 exp: exp TOK_MINUS term .
   20 term: term . TOK_MULTIPLY factor
   21     | term . TOK_DIVIDE factor

    TOK_MULTIPLY  shift, and go to state 57
    TOK_DIVIDE    shift, and go to state 58

    $default  reduce using rule 18 (exp)


State 64

   20 term: term TOK_MULTIPLY factor .

    $default  reduce using rule 20 (term)


State 65

   21 term: term TOK_DIVIDE factor .

    $default  reduce using rule 21 (term)


State 66

   17 exp: exp . TOK_PLUS term
   18    | exp . TOK_MINUS term
   28 index_exp: TOK_ID TOK_ASSIGMENT exp TOK_TO exp .

    TOK_PLUS   shift, and go to state 55
    TOK_MINUS  shift, and go to state 56

    $default  reduce using rule 28 (index_exp)


State 67

   30 body: TOK_BEGIN stmt_list TOK_END .

    $default  reduce using rule 30 (body)
